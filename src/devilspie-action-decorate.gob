%h{
#define WNCK_I_KNOW_THIS_IS_UNSTABLE
#include "libwnck/window.h"
#include "libwnck/screen.h"
#include "tristate-dummy.h"
#include "devilspie-action.h"
#include "devilspie.h"

#include <X11/Xlib.h>
#include <X11/Xatom.h>
Screen *_wnck_screen_get_xscreen (WnckScreen *screen);
Atom _wnck_atom_get (const char *atom_name);
void _wnck_change_state (Screen  *screen,
                         Window   xwindow,
                         gboolean add,
                         Atom     state1,
                         Atom     state2);
%}

class DevilsPie:Action:Decorate from DevilsPie:Action {

  public DevilsPieTriState decorated;
  property ENUM decorated
  (nick = _("Decorated windows (OpenBox)"),
   blurb = _("Window is decorated (OpenBox specific)"),
   enum_type = DevilsPie:TriState, default_value = TRI_UNSET, link);

  override (DevilsPie:Action) gboolean run(DevilsPie:Action *self (check null type), Wnck:Window *window (check null type)) {
    DevilsPieActionDecorate *a = (DevilsPieActionDecorate*)self;
    /* TRUE = decorated, FALSE = undecorated */
    if (a->decorated == TRI_TRUE) {
      _wnck_change_state (_wnck_screen_get_xscreen(wnck_window_get_screen(window)),
                          wnck_window_get_xid(window),
                          FALSE,
                          _wnck_atom_get ("_OB_WM_STATE_UNDECORATED"),
                          0);
    }
    if (a->decorated == TRI_FALSE) {
      _wnck_change_state (_wnck_screen_get_xscreen(wnck_window_get_screen(window)),
                          wnck_window_get_xid(window),
                          TRUE,
                          _wnck_atom_get ("_OB_WM_STATE_UNDECORATED"),
                          0);
    }
    return TRUE;
  }
  
  public GObject *new(void) {
    return (GObject*)GET_NEW;
  }
}
