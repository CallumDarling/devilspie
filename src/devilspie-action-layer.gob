%h{
#include <X11/Xlib.h>
#include <X11/Xatom.h>
#include <libwnck/window.h>
#include <libwnck/screen.h>

#include "tristate-dummy.h"
#include "devilspie-action.h"
#include "devilspie.h"
#include "xutils.h"

Screen *_wnck_screen_get_xscreen (WnckScreen *screen);
%}

class DevilsPie:Action:Layer from DevilsPie:Action {

  public DevilsPieTriState above;
  property ENUM above
  (nick = _("Above windows?"),
   blurb = _("Window is above all others"),
   flags = CONSTRUCT,
   enum_type = DevilsPie:TriState, default_value = TRI_UNSET, link);

  override (DevilsPie:Action) gboolean run(DevilsPie:Action *self (check null type), Wnck:Window *window (check null type)) {
    DevilsPieActionLayer *a = (DevilsPieActionLayer*)self;
    /* TRUE = above, FALSE = below */
    if (a->above == TRI_TRUE) {
      my_wnck_change_state (my_wnck_window_get_xscreen(window),
                          wnck_window_get_xid(window),
                          TRUE,
                          my_wnck_atom_get ("_NET_WM_STATE_ABOVE"),
                          0);
    }
    if (a->above == TRI_FALSE) {
      my_wnck_change_state (my_wnck_window_get_xscreen(window),
                          wnck_window_get_xid(window),
                          TRUE,
                          my_wnck_atom_get ("_NET_WM_STATE_BELOW"),
                          0);
    }
    return TRUE;
  }
  
  public GObject *new(void) {
    return (GObject*)GET_NEW;
  }
}
